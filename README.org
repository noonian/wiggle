#+TITLE: Wiggle
#+STARTUP: indent

Wiggle is a small lispy language intended to be embedded in
executables compiled with Graal native-image.

Wiggle is inspired by [[https://github.com/benzap/eden][Eden]], but where Eden presents a Lua-like syntax,
Wiggle is a lisp and is intended to feel like Clojure
syntactically. My initial usecase is to use Wiggle as a templating
language for kubernetes objects written in EDN.

* Running

The entrypoint is very rudimentary and accepts a program as the first
argument on the command line. It will print the entire program before
evaluating it, then print the result.

With Clojure deps cli:

#+BEGIN_SRC sh :results output :exports both
  clojure -m wiggle.runtime '(+ 3 3)'
#+END_SRC

#+RESULTS:
: Program: (+ 3 3)
: 6

With the compiled native executable:

#+BEGIN_SRC sh :results output :exports both
  ./wiggle.runtime '(println "EDN will rule the world!")'
#+END_SRC

#+RESULTS:
: Program: (println "EDN will rule the world!")
: EDN will rule the world!
: nil

* Syntax and semantics

Wiggle is implemented entirely on existing EDN types and uses
Clojure's built-in EDN reader to parse Wiggle. If embedding Wiggle in
another program, you would likely parse the EDN yourself and pass
parts of it to Wiggle.

The only functions available right now are =+= and =println=. At the
moment this project is just a fun experiment and the beginning of a
PoC.

* Compiling as a native executable

#+BEGIN_SRC sh :results none
  rm -rf classes || true
  mkdir classes
  clojure -e '(compile (symbol "wiggle.runtime"))'
  native-image -cp $(clojure -Spath):classes \
               --report-unsupported-elements-at-runtime \
               wiggle.runtime
#+END_SRC

* License

The MIT License (MIT)

Copyright Â© 2018 Jedidiah T Clinger

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
